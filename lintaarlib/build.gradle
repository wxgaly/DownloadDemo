apply plugin: 'com.android.library'

apply plugin: 'maven'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: NOVA_REPO_RELEASE_URL) {
                authentication(userName: USER_NAME, password: PASSWORD)
            }

            snapshotRepository(url: NOVA_REPO_SNAPSHOT_URL) {
                authentication(userName: USER_NAME, password: PASSWORD)
            }

            pom.project {
                version LIBRARY_VERSION
                artifactId ARTIFACTID
                groupId GROUP_ID
                packaging LIB_TYPE
                description LIB_DESCRIPTION
            }

        }
    }
}

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    lintChecks project(':LintJarLib')
}

// 定义方法lintJarImport
//configurations {
//    lintJarImport
//}
//
//// 链接到lintJar中的lintJarOutput方法,调用jar方法，并获得jar包
//dependencies {
//    lintJarImport project(path: ':lintlib', configuration: 'lintJarOutput')
//}
//
//// 将得到的JAR包复制到目录build/intermediates/lint/下
//task copyLintJar(type: Copy) {
//    from (configurations.lintJarImport) {
//        rename {
//            String fileName ->
//                'lint.jar'
//        }
//    }
//    into 'build/intermediates/lint/'
//}
//// 当项目build到compileLint这一步时执行copyLintJar方法
//project.afterEvaluate {
//    def compileLintTask = project.tasks.find{ it.name == 'compileLint'}
//    compileLintTask.dependsOn(copyLintJar)
//}